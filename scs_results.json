[
    {
        "type": "npm",
        "name": "handlebars",
        "version": "4.7.9",
        "risks": []
    },
    {
        "type": "npm",
        "name": "lodash",
        "version": "4.17.11",
        "risks": []
    },
    {
        "type": "npm",
        "name": "node-ipc",
        "version": "9.2.2",
        "risks": [
            {
                "id": "3fd21b8ebb6337f8b405e084e5f7b8394d10c76a",
                "description": "The malicious payload in this package has the ability to corrupt or destroy files on disk\n### About\n\nFile wiping or file destruction is a type of risk which usually done when attackers wish to cause harm. File destruction can be done in several ways such as:\n- Recursively overwriting all files with random / static content\n- Deleting all files\n- Encrypting all files and deleting the encryption key",
                "title": "Wiper",
                "score": 10
            },
            {
                "id": "7e10f2a9a922871f8cd1098060ce92a20dc6f4b1",
                "description": "This package includes functionality which aims to protest or raise an issue and might include undesired behavior.\n### About\n\nSimilar to a malicious package risk, Protestware risk may include malicious functionality [as seen in past incidents](https://checkmarx.com/blog/protestware-politics-and-open-source-software/). Protestware may contain any of the following:\n- Targeted payload\n- DOS\n- SPAM messages\n- Malicious dependencies",
                "title": "Protestware",
                "score": 5
            },
            {
                "id": "dc877dee62e5a2528e12ce1fdeade0f1c11e197f",
                "description": "This package was manually inspected by a security researcher and flagged as malicious\n### About\n\nClassifying malicious packages is an internal process, analysis is done at scale automatically via multiple engines. Once there's a risk suspicion, this is forwarded to a security researcher for a manual evaluation.\n\nAttackers take advantage of the excessive trust in the open-source ecosystem and launch software supply chain attacks in the form of code packages.   \n\nThe risk of having a package with a malicious payload is high. It's a common behavior for most of the malicious payloads to execute itself automatically upon installing or using the package. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/malicious-package.png)\n\nWhile some dependency vulnerabilities have the privilege to be kept as known issue due to risk-management, same does not apply in the case of a malicious package, and it should be removed with the highest priority.",
                "title": "Malicious Package",
                "score": 10
            },
            {
                "id": "a411cf63e1757a4ff8f094e296ef450094389807",
                "description": "The Contributor of this package, npm user [riaevangelist](https://www.npmjs.com/~riaevangelist), previously seen corrupting one of his popular package [node-ipc](https://checkmarx.com/blog/protestware-politics-and-open-source-software/) infected with a malicious payload. [Read more](https://checkmarx.com/blog/protestware-politics-and-open-source-software/)\n### About\n\nWe recommend freezing this package's version in your manifest file or consider finding an alternative to this package.\n\nRelying on code from an unreliable contributors could damage the integrity of the code built depends on it. There is a risk this package may be corrupted as well in future versions.",
                "title": "Historical Unreliable User Contribution",
                "score": 4
            }
        ]
    },
    {
        "type": "npm",
        "name": "ua-parser-js",
        "version": "0.7.29",
        "risks": [
            {
                "id": "55215f3751219a4d957ec1064f1a80302e5aa4de",
                "description": "This package exfiltrates computer and operating system information\n### About\n\nData exfiltration may be done in numerous ways such as through HTTP requests, DNS tunneling, various webhooks and more. It is common by attackers to try to exfiltrate sensitive information such as:\n- Credentials\n- Environment variables\n- SSH keys\n- Authentication tokens\n- Computer and operating system information\n- Network settings\n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/data-exfiltration.png)",
                "title": "Data Exfiltration",
                "score": 6
            },
            {
                "id": "878117b8bfad815123732fe81c47a4753327d1b3",
                "description": "This package downloads a harmful file.\nFile hash:\n```2a3acdcd76575762b18c18c644a745125f55ce121f742d2aad962521bc7f25fd```\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes each of the newly created files. In case a file is harmful, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/harmful-file-download.png)",
                "title": "Harmful File Download",
                "score": 9
            },
            {
                "id": "8fe92ef63c06c8478def0a2a889276b86eb4489c",
                "description": "This package downloads a harmful file.\nFile hash:\n```7f986cd3c946f274cdec73f80b84855a77bc2a3c765d68897fbc42835629a5d5```\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes each of the newly created files. In case a file is harmful, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/harmful-file-download.png)",
                "title": "Harmful File Download",
                "score": 9
            },
            {
                "id": "9e3787735658af87dff6dca6bdbfb7fcdd515898",
                "description": "This package downloads a harmful file.\nFile hash:\n```ea131cc5ccf6aa6544d6cb29cdb78130feed061d2097c6903215be1499464c2e```\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes each of the newly created files. In case a file is harmful, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/harmful-file-download.png)",
                "title": "Harmful File Download",
                "score": 9
            },
            {
                "id": "a1d152f4d8d96342845e3ff5ead13c15b29c08ce",
                "description": "This package exfiltrates stored credentials and sensitive information\n### About\n\nData exfiltration may be done in numerous ways such as through HTTP requests, DNS tunneling, various webhooks and more. It is common by attackers to try to exfiltrate sensitive information such as:\n- Credentials\n- Environment variables\n- SSH keys\n- Authentication tokens\n- Computer and operating system information\n- Network settings\n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/data-exfiltration.png)",
                "title": "Data Exfiltration",
                "score": 8
            },
            {
                "id": "da16162ba46ff718f8592859529a48cd84075098",
                "description": "This package was manually inspected by a security researcher and flagged as malicious\n### About\n\nClassifying malicious packages is an internal process, analysis is done at scale automatically via multiple engines. Once there's a risk suspicion, this is forwarded to a security researcher for a manual evaluation.\n\nAttackers take advantage of the excessive trust in the open-source ecosystem and launch software supply chain attacks in the form of code packages.   \n\nThe risk of having a package with a malicious payload is high. It's a common behavior for most of the malicious payloads to execute itself automatically upon installing or using the package. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/malicious-package.png)\n\nWhile some dependency vulnerabilities have the privilege to be kept as known issue due to risk-management, same does not apply in the case of a malicious package, and it should be removed with the highest priority.",
                "title": "Malicious Package",
                "score": 10
            },
            {
                "id": "fcaadf05ba7c51ce7112e28b98f14a95cd7ca3f9",
                "description": "This package executes a crypto mining software\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes network and filesystem activity. In case a crypto mining behavior is detected, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/crypto-miner.png)",
                "title": "Crypto Miner",
                "score": 9
            }
        ]
    },
    {
        "type": "npm",
        "name": "event-pubsub",
        "version": "5.0.3",
        "risks": [
            {
                "id": "061301c4620cc3a1cbed0d53038748649fe1c478",
                "description": "The Contributor of this package, npm user [riaevangelist](https://www.npmjs.com/~riaevangelist), previously seen corrupting one of his popular package [node-ipc](https://checkmarx.com/blog/protestware-politics-and-open-source-software/) infected with a malicious payload. [Read more](https://checkmarx.com/blog/protestware-politics-and-open-source-software/)\n### About\n\nWe recommend freezing this package's version in your manifest file or consider finding an alternative to this package.\n\nRelying on code from an unreliable contributors could damage the integrity of the code built depends on it. There is a risk this package may be corrupted as well in future versions.",
                "title": "Historical Unreliable User Contribution",
                "score": 4
            }
        ]
    },
    {
        "type": "npm",
        "name": "momnet",
        "version": "2.29.1",
        "risks": [
            {
                "id": "186b88f11f02aebce3dd34bd7b8bb74eedf62024",
                "description": "This package name is similar to other popular package \"moment\"\n### About\n\nTyposquatting attacks relies on user type errors being inputted into installation commands or manifest files. \n\nFor example, let's take the popular npm package [moment](https://www.npmjs.com/package/moment) which has tens of millions of weekly downloads.\n\nA user would like use this package and assisting the `npm install` command like so:\n```\nnpm install moment\n``` \nHowever, sometimes users tend to do accidentally typos, so another user would write: \n```\nnpm install momnet\n```\n\nIn this case, if a package exists under the Typosquatting name, it will be fetched and used.\n\n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/typosquatting.png)\n\nAttackers find this method effective and usually tend to copy the original functionality and metadata to avoid detection. Typosquatting is one way to mislead developers to download the wrong package and usually includes with a malicious payloads.",
                "title": "Typosquatting",
                "score": 8
            },
            {
                "id": "745d54931db73d31470ac8774ea45a79903dab0c",
                "description": "This package was manually inspected by a security researcher and flagged as malicious\n### About\n\nClassifying malicious packages is an internal process, analysis is done at scale automatically via multiple engines. Once there's a risk suspicion, this is forwarded to a security researcher for a manual evaluation.\n\nAttackers take advantage of the excessive trust in the open-source ecosystem and launch software supply chain attacks in the form of code packages.   \n\nThe risk of having a package with a malicious payload is high. It's a common behavior for most of the malicious payloads to execute itself automatically upon installing or using the package. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/malicious-package.png)\n\nWhile some dependency vulnerabilities have the privilege to be kept as known issue due to risk-management, same does not apply in the case of a malicious package, and it should be removed with the highest priority.",
                "title": "Malicious Package",
                "score": 10
            },
            {
                "id": "8c7e99081f013f9fdc43bed8c71b287c2c8e67d6",
                "description": "There is a weak link between the package's listed metadata and the referenced Git repository \"https://github.com/moment/moment\"\n### About\n\nPackage managers often display traction statistics per code package based on it's related GitHub repository. This statistics helps developers to evaluate code packages.\n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/starjacking.png)\n\nThe statistics displayed by the package managers do not go through any validation process. It can easily be falsified to mislead developers because of how this information is acquired.\n\n\nAs part of the package metadata analysis capabilities Checkmarx has, StarJacking engine verifies the authenticity of such Git repository references and in case it's a false reference, this risk is shown",
                "title": "StarJacking",
                "score": 5
            }
        ]
    },
    {
        "type": "npm",
        "name": "flow-dev-tools",
        "version": "99.10.9",
        "risks": [
            {
                "id": "630135212e0be3af1e076c1370d0ad2c95186a2e",
                "description": "This package communicates with a suspicious service commonly used by threat actors \"https://rt11[.]ml\"",
                "title": "Network Anomaly",
                "score": 8
            },
            {
                "id": "f9f7b7c66f7a02b25f59aab1d47f569cc778c886",
                "description": "This package is using dependency confusion attack\n### About\n\nDependency Confusion is a technique discovered by [@alex.birsan](https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610) to hijack a privately used package by registering its name (if available) on a public registry with a higher version number. This may cause artifact servers and build tools to \"confuse\" and use the attacker's package.\n\nFor example, consider the following private package \"my-company-utils\" being hosted on a private artifact server:\n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/dep-conf-1.png)\n\n\nIn case an attacker targeting \"my-company-utils\" package, as long as it is not occupied by someone else on the official package manager, he's free to register it. If the attacker registers it and published with a very high version number such as \"v99.99.99\" most likely the automatic update logic and version comparisons functions will \"confuse\" and prefer using the attacker's package\n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/dep-conf-2.png)\n\nAs an addition step of mitigation, we recommend using our open-source tool as a CI step [DustiLock](https://github.com/Checkmarx/dustilock)",
                "title": "Dependency Confusion",
                "score": 8
            },
            {
                "id": "261cc1abd718560ad5f5d3459676b3c9d856c88d",
                "description": "This package was manually inspected by a security researcher and flagged as malicious\n### About\n\nClassifying malicious packages is an internal process, analysis is done at scale automatically via multiple engines. Once there's a risk suspicion, this is forwarded to a security researcher for a manual evaluation.\n\nAttackers take advantage of the excessive trust in the open-source ecosystem and launch software supply chain attacks in the form of code packages.   \n\nThe risk of having a package with a malicious payload is high. It's a common behavior for most of the malicious payloads to execute itself automatically upon installing or using the package. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/malicious-package.png)\n\nWhile some dependency vulnerabilities have the privilege to be kept as known issue due to risk-management, same does not apply in the case of a malicious package, and it should be removed with the highest priority.",
                "title": "Malicious Package",
                "score": 10
            }
        ]
    },
    {
        "type": "npm",
        "name": "scs",
        "version": "0.0.1",
        "risks": [
            {
                "id": "2c1478a2e6bda9e6b59f797f06b00d05f7d418ac",
                "description": "This package exfiltrates computer and operating system information\n### About\n\nData exfiltration may be done in numerous ways such as through HTTP requests, DNS tunneling, various webhooks and more. It is common by attackers to try to exfiltrate sensitive information such as:\n- Credentials\n- Environment variables\n- SSH keys\n- Authentication tokens\n- Computer and operating system information\n- Network settings\n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/data-exfiltration.png)",
                "title": "Data Exfiltration",
                "score": 6
            },
            {
                "id": "5058cbb1c0b4ae25f762fafdd169a64ca86bae51",
                "description": "This package downloads a harmful file.\nFile hash:\n```7f986cd3c946f274cdec73f80b84855a77bc2a3c765d68897fbc42835629a5d5```\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes each of the newly created files. In case a file is harmful, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/harmful-file-download.png)",
                "title": "Harmful File Download",
                "score": 9
            },
            {
                "id": "5d3bd4ff230005db2ef9d642ddc7c556267acc82",
                "description": "This package downloads a harmful file.\nFile hash:\n```2a3acdcd76575762b18c18c644a745125f55ce121f742d2aad962521bc7f25fd```\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes each of the newly created files. In case a file is harmful, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/harmful-file-download.png)",
                "title": "Harmful File Download",
                "score": 9
            },
            {
                "id": "609cf478085a1726fad82c321356c4e760c0565d",
                "description": "This package exfiltrates stored credentials and sensitive information\n### About\n\nData exfiltration may be done in numerous ways such as through HTTP requests, DNS tunneling, various webhooks and more. It is common by attackers to try to exfiltrate sensitive information such as:\n- Credentials\n- Environment variables\n- SSH keys\n- Authentication tokens\n- Computer and operating system information\n- Network settings\n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/data-exfiltration.png)",
                "title": "Data Exfiltration",
                "score": 8
            },
            {
                "id": "63498469dbfbeb33ece5015b5ca0c94c42cc6d4a",
                "description": "This package downloads a harmful file.\nFile hash:\n```ea131cc5ccf6aa6544d6cb29cdb78130feed061d2097c6903215be1499464c2e```\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes each of the newly created files. In case a file is harmful, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/harmful-file-download.png)",
                "title": "Harmful File Download",
                "score": 9
            },
            {
                "id": "b3863d7ed0ffa321a27ae988a93a0d56f1cdafc9",
                "description": "This package was manually inspected by a security researcher and flagged as malicious\n### About\n\nClassifying malicious packages is an internal process, analysis is done at scale automatically via multiple engines. Once there's a risk suspicion, this is forwarded to a security researcher for a manual evaluation.\n\nAttackers take advantage of the excessive trust in the open-source ecosystem and launch software supply chain attacks in the form of code packages.   \n\nThe risk of having a package with a malicious payload is high. It's a common behavior for most of the malicious payloads to execute itself automatically upon installing or using the package. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/malicious-package.png)\n\nWhile some dependency vulnerabilities have the privilege to be kept as known issue due to risk-management, same does not apply in the case of a malicious package, and it should be removed with the highest priority.",
                "title": "Malicious Package",
                "score": 10
            },
            {
                "id": "be63a1ae08e6994d50578bb85abe67ba07cdc20f",
                "description": "This package executes a crypto mining software\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes network and filesystem activity. In case a crypto mining behavior is detected, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/crypto-miner.png)",
                "title": "Crypto Miner",
                "score": 9
            }
        ]
    }
]